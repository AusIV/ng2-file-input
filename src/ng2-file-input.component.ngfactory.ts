/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from 'ng2-file-input/src/ng2-file-input.component';
import * as import1 from 'ng2-file-input/node_modules/@angular/core/src/change_detection/change_detection_util';
import * as import2 from 'ng2-file-input/node_modules/@angular/core/src/linker/view';
import * as import3 from 'ng2-file-input/node_modules/@angular/core/src/linker/view_utils';
import * as import4 from 'ng2-file-input/node_modules/@angular/core/src/render/api';
import * as import5 from 'ng2-file-input/node_modules/@angular/core/src/metadata/view';
import * as import6 from 'ng2-file-input/node_modules/@angular/core/src/linker/view_type';
import * as import7 from 'ng2-file-input/node_modules/@angular/core/src/change_detection/constants';
import * as import8 from 'ng2-file-input/node_modules/@angular/core/src/linker/component_factory';
import * as import9 from 'ng2-file-input/node_modules/@angular/platform-browser/src/security/dom_sanitization_service';
import * as import10 from 'ng2-file-input/src/ng2-file-input.interface';
import * as import11 from 'ng2-file-input/node_modules/@angular/core/src/linker/view_container';
import * as import12 from 'ng2-file-input/node_modules/@angular/core/src/security';
import * as import13 from '../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import14 from '../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import15 from 'ng2-file-input/node_modules/@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from 'ng2-file-input/node_modules/@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from 'ng2-file-input/node_modules/@angular/core/src/linker/element_ref';
import * as import18 from 'ng2-file-input/node_modules/@angular/core/src/linker/template_ref';
import * as import19 from 'ng2-file-input/node_modules/@angular/common/src/directives/ng_if';
import * as import20 from 'ng2-file-input/node_modules/@angular/common/src/directives/ng_class';
import * as import21 from '../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import22 from 'ng2-file-input/node_modules/@angular/common/src/directives/ng_for';
import * as import23 from '../node_modules/bergben-angular2-file-drop/dist/src/file-drop.directive.ngfactory';
import * as import24 from 'ng2-file-input/node_modules/bergben-angular2-file-drop/dist/src/file-drop.directive';
export class Wrapper_Ng2FileInputComponent {
  /*private*/ _eventHandler:Function;
  context:import0.Ng2FileInputComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.Ng2FileInputComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_dropText(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.dropText = currValue;
      this._expr_0 = currValue;
    }
  }
  check_browseText(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.browseText = currValue;
      this._expr_1 = currValue;
    }
  }
  check_removeText(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.removeText = currValue;
      this._expr_2 = currValue;
    }
  }
  check_invalidFileText(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.invalidFileText = currValue;
      this._expr_3 = currValue;
    }
  }
  check_invalidFileTimeout(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.invalidFileTimeout = currValue;
      this._expr_4 = currValue;
    }
  }
  check_multiple(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.multiple = currValue;
      this._expr_5 = currValue;
    }
  }
  check_removable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.removable = currValue;
      this._expr_6 = currValue;
    }
  }
  check_showPreviews(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.showPreviews = currValue;
      this._expr_7 = currValue;
    }
  }
  check_extensions(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.extensions = currValue;
      this._expr_8 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.output.subscribe(_eventHandler.bind(view,'onChange'))); }
  }
}
var renderType_Ng2FileInputComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_Ng2FileInputComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.Ng2FileInputComponent>;
  _Ng2FileInputComponent_0_3:Wrapper_Ng2FileInputComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Ng2FileInputComponent_Host0,renderType_Ng2FileInputComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng2-file-input',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Ng2FileInputComponent0(this.viewUtils,this,0,this._el_0);
    this._Ng2FileInputComponent_0_3 = new Wrapper_Ng2FileInputComponent(this.injectorGet(import9.DomSanitizer,this.parentIndex),this.injectorGet(import10.Ng2FileInputOptions,this.parentIndex));
    this.compView_0.create(this._Ng2FileInputComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._Ng2FileInputComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Ng2FileInputComponent) && (0 === requestNodeIndex))) { return this._Ng2FileInputComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Ng2FileInputComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Ng2FileInputComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const Ng2FileInputComponentNgFactory:import8.ComponentFactory<import0.Ng2FileInputComponent> = new import8.ComponentFactory<import0.Ng2FileInputComponent>('ng2-file-input',View_Ng2FileInputComponent_Host0,import0.Ng2FileInputComponent);
const styles_Ng2FileInputComponent:any[] = ([] as any[]);
class View_Ng2FileInputComponent3 extends import2.AppView<any> {
  _el_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_Ng2FileInputComponent3,renderType_Ng2FileInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_1 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'img',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = this.parentView.parentView.parentView.context.getObjectUrl(this.parentView.context.$implicit);
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_0,'src',this.viewUtils.sanitizer.sanitize(import12.SecurityContext.URL,currVal_1));
      this._expr_1 = currVal_1;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_Ng2FileInputComponent4 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_Ng2FileInputComponent4,renderType_Ng2FileInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','ng2-file-input-file-text remove'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                                ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n                            ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4:any = this.parentView.parentView.parentView.context.removeText;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_2,'innerHTML',this.viewUtils.sanitizer.sanitize(import12.SecurityContext.HTML,currVal_4));
      this._expr_4 = currVal_4;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.parentView.context.removeFile(this.parentView.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_Ng2FileInputComponent2 extends import2.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import13.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import11.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import14.Wrapper_NgIf;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import11.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import14.Wrapper_NgIf;
  _text_7:any;
  _map_15:any;
  /*private*/ _expr_16:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_Ng2FileInputComponent2,renderType_Ng2FileInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_15 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {image: p0};
    });
    this._expr_16 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','ng2-file-input-file'),(null as any));
    this._NgClass_0_3 = new import13.Wrapper_NgClass(this.parentView.parentView.parentView.injectorGet(import15.IterableDiffers,this.parentView.parentView.parentIndex),this.parentView.parentView.parentView.injectorGet(import16.KeyValueDiffers,this.parentView.parentView.parentIndex),new import17.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n                            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'span',new import3.InlineArray2(2,'class','ng2-file-input-file-text'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n                            ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import11.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import18.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import14.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n                            ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_6 = new import11.ViewContainer(6,0,this,this._anchor_6);
    this._TemplateRef_6_5 = new import18.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import14.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(this._el_0,' \n                        ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._anchor_6,
      this._text_7
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import19.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import18.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import19.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    if (((token === import20.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 7)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'ng2-file-input-file';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_15((this.context.$implicit.type.indexOf('image') !== (0 - 1)));
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4_0_0:any = (this.context.$implicit.type.indexOf('image') !== (0 - 1));
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = this.parentView.parentView.context.removable;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    const currVal_16:any = this.context.$implicit.name;
    if (import3.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementProperty(this._el_2,'innerHTML',this.viewUtils.sanitizer.sanitize(import12.SecurityContext.HTML,currVal_16));
      this._expr_16 = currVal_16;
    }
  }
  destroyInternal():void {
    this._vc_4.destroyNestedViews();
    this._vc_6.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 4)) { return new View_Ng2FileInputComponent3(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 6)) { return new View_Ng2FileInputComponent4(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
}
class View_Ng2FileInputComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import11.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import21.Wrapper_NgFor;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_Ng2FileInputComponent1,renderType_Ng2FileInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','ng2-file-input-files'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import11.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import18.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import21.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.parentView.injectorGet(import15.IterableDiffers,this.parentView.parentIndex),this.parentView.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import22.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.currentFiles;
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_Ng2FileInputComponent2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}
var renderType_Ng2FileInputComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_Ng2FileInputComponent,{});
export class View_Ng2FileInputComponent0 extends import2.AppView<import0.Ng2FileInputComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _NgClass_4_3:import13.Wrapper_NgClass;
  _FileDropDirective_4_4:import23.Wrapper_FileDropDirective;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _anchor_11:any;
  /*private*/ _vc_11:import11.ViewContainer;
  _TemplateRef_11_5:any;
  _NgIf_11_6:import14.Wrapper_NgIf;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  _map_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Ng2FileInputComponent0,renderType_Ng2FileInputComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
    this._map_22 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'file-is-over': p0};
    });
    this._expr_23 = import1.UNINITIALIZED;
    this._expr_24 = import1.UNINITIALIZED;
    this._expr_25 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','ng2-file-input'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','ng2-file-input-invalid text-danger'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray4(4,'class','ng2-file-input-drop-container','fileDrop',''),(null as any));
    this._NgClass_4_3 = new import13.Wrapper_NgClass(this.parentView.injectorGet(import15.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import16.KeyValueDiffers,this.parentIndex),new import17.ElementRef(this._el_4),this.renderer);
    this._FileDropDirective_4_4 = new import23.Wrapper_FileDropDirective(new import17.ElementRef(this._el_4));
    this._text_5 = this.renderer.createText(this._el_4,'\n                        ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_7 = this.renderer.createText(this._el_4,'\n                        ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_4,'button',new import3.InlineArray4(4,'class','btn btn-primary','type','button'),(null as any));
    this._text_9 = this.renderer.createText(this._el_4,'\n                    ',(null as any));
    this._text_10 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._anchor_11 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_11 = new import11.ViewContainer(11,0,this,this._anchor_11);
    this._TemplateRef_11_5 = new import18.TemplateRef_(this,11,this._anchor_11);
    this._NgIf_11_6 = new import14.Wrapper_NgIf(this._vc_11.vcRef,this._TemplateRef_11_5);
    this._text_12 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_0,'input',new import3.InlineArray2(2,'type','file'),(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray16(10,'fileOver',(null as any),'onFileDrop',(null as any),'dragover',(null as any),'dragleave',(null as any),'drop',(null as any)),this.eventHandler(this.handleEvent_4));
    this._FileDropDirective_4_4.subscribe(this,this.eventHandler(this.handleEvent_4),true,true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_8));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_13,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_13));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10,
      this._anchor_11,
      this._text_12,
      this._el_13,
      this._text_14
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgClass) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._NgClass_4_3.context; }
    if (((token === import24.FileDropDirective) && ((4 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._FileDropDirective_4_4.context; }
    if (((token === import18.TemplateRef) && (11 === requestNodeIndex))) { return this._TemplateRef_11_5; }
    if (((token === import19.NgIf) && (11 === requestNodeIndex))) { return this._NgIf_11_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4_0_0:any = 'ng2-file-input-drop-container';
    this._NgClass_4_3.check_klass(currVal_4_0_0,throwOnChange,false);
    const currVal_4_0_1:any = this._map_22(this.context.fileIsOver);
    this._NgClass_4_3.check_ngClass(currVal_4_0_1,throwOnChange,false);
    this._NgClass_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    this._FileDropDirective_4_4.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_11_0_0:any = this.context.showPreviews;
    this._NgIf_11_6.check_ngIf(currVal_11_0_0,throwOnChange,false);
    this._NgIf_11_6.ngDoCheck(this,this._anchor_11,throwOnChange);
    this._vc_11.detectChangesInNestedViews(throwOnChange);
    const currVal_20:boolean = !this.context.invalidFile;
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementProperty(this._el_2,'hidden',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this.context.invalidFileText;
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_2,'innerHTML',this.viewUtils.sanitizer.sanitize(import12.SecurityContext.HTML,currVal_21));
      this._expr_21 = currVal_21;
    }
    const currVal_23:any = this.context.dropText;
    if (import3.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementProperty(this._el_6,'innerHTML',this.viewUtils.sanitizer.sanitize(import12.SecurityContext.HTML,currVal_23));
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.context.browseText;
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_8,'innerHTML',this.viewUtils.sanitizer.sanitize(import12.SecurityContext.HTML,currVal_24));
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = (this.context.multiple? true: (null as any));
    if (import3.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setElementAttribute(this._el_13,'multiple',((currVal_25 == null)? (null as any): currVal_25.toString()));
      this._expr_25 = currVal_25;
    }
  }
  destroyInternal():void {
    this._vc_11.destroyNestedViews();
    this._FileDropDirective_4_4.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 11)) { return new View_Ng2FileInputComponent1(this.viewUtils,this,11,this._anchor_11,this._vc_11); }
    return (null as any);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FileDropDirective_4_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'fileOver')) {
      const pd_sub_0:any = ((<any>this.context.fileOver($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'onFileDrop')) {
      const pd_sub_1:any = ((<any>this.context.onFileDrop($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this._el_13.click()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_13(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>this.context.fileSelected($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}